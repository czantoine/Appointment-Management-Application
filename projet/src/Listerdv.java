
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Antoine
 */
public class Listerdv extends javax.swing.JFrame {
static String test;
       Connection conn = null;
    Statement st = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    public Listerdv() {
        initComponents();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
        findRdv();
        
    }
    
    
    
    public ArrayList<Rdv> ListRdv(String ValToSearch){
        ArrayList<Rdv> rdvList = new ArrayList<Rdv>();
        

        conn = SQLConnection.connectDB();
        
        try{
 
            st = conn.createStatement();
            String searchQuery = "SELECT * FROM `rdv` WHERE CONCAT (`id_rdv`, `Date`, `Heure`,`Prix`, `Reglement`,`Anxiete`,`Mots_clef`,`Postures`,`Comportement`, `id_patient`) LIKE '%"+ValToSearch+"%'";
            rs = st.executeQuery (searchQuery);
                    
            Rdv rdv;
            
            while (rs.next()){
                rdv = new Rdv(
                                     rs.getInt("id_rdv"),
                                     rs.getDate("Date"),
                                     rs.getString("Heure"),
                                     rs.getInt("Prix"),
                                     rs.getString("Reglement"),
                                     rs.getInt("Anxiete"),
                                     rs.getString("Mots_clef"),
                                     rs.getString("Postures"),
                                     rs.getString("Comportement"),
                                     rs.getInt("id_patient")
                                     );
                rdvList.add(rdv);
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        return rdvList;
    }
    
    public void findRdv(){
        
        
        ArrayList<Rdv> rdv = ListRdv(txtsearch.getText());
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"id_rdv","Date","Heure","Prix","Reglement","Anxiete","Mots_clef","Postures","Comportement","id_patient"});
        Object[] row = new Object [9];
        
        for(int i = 0; i < rdv.size(); i++){
            row[0] = rdv.get(i).getId_rdv();
            row[1] = rdv.get(i).getDate();
            row[2] = rdv.get(i).getHeure();
            row[3] = rdv.get(i).getPrix();
            row[4] = rdv.get(i).getReglement();
            row[5] = rdv.get(i).getAnxiete();
            row[6] = rdv.get(i).getMots_clef();
            row[7] = rdv.get(i).getPostures();
            row[8] = rdv.get(i).getComportement();
            row[9] = rdv.get(i).getId_patient();            
            
            model.addRow(row);
        }
        TableSearchRdv.setModel(model);
    }
    
    public void Deplace(){
   
            conn = SQLConnection.connectDB();
        try{
   
            int row = TableSearchRdv.getSelectedRow();
            this.test =(TableSearchRdv.getModel().getValueAt(row,0).toString());
            String requet = "SELECT * FROM rdv where id_rdv = '"+test+"' ";
            PreparedStatement st = conn.prepareStatement(requet);
            st = conn.prepareStatement(requet);
            
            rs = st.executeQuery();
            
            if(rs.next()){
                String t1 = rs.getString("anxiete");
                txtAnxiete.setText(t1);
                
                String t2 = rs.getString("mots_clef");
                txtMots_clef.setText(t2);
                
                String t3 = rs.getString("Postures");
                txtPostures.setText(t3);
                
                String t4 = rs.getString("Comportement");
                txtComportement.setText(t4);
 
            }
               
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
            
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        search = new javax.swing.JButton();
        txtsearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableSearchRdv = new javax.swing.JTable();
        txtAnxiete = new javax.swing.JLabel();
        txtMots_clef = new javax.swing.JLabel();
        txtPostures = new javax.swing.JLabel();
        txtComportement = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Liste des rendez-vous");

        jButton1.setText("Retourner au menu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        search.setText("Rechercher");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });

        TableSearchRdv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TableSearchRdv);

        txtAnxiete.setText("jLabel2");

        txtMots_clef.setText("jLabel3");

        txtPostures.setText("jLabel4");

        txtComportement.setText("jLabel5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(search)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 350, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(21, 21, 21))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAnxiete)
                            .addComponent(txtMots_clef)
                            .addComponent(txtPostures)
                            .addComponent(txtComportement))))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search)
                            .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtAnxiete)
                        .addGap(31, 31, 31)
                        .addComponent(txtMots_clef)
                        .addGap(29, 29, 29)
                        .addComponent(txtPostures)
                        .addGap(27, 27, 27)
                        .addComponent(txtComportement)))
                .addGap(35, 35, 35)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       Mainmenu back = new Mainmenu ();
        back.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        findRdv();
    }//GEN-LAST:event_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Listerdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Listerdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Listerdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Listerdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Listerdv().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableSearchRdv;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton search;
    private javax.swing.JLabel txtAnxiete;
    private javax.swing.JLabel txtComportement;
    private javax.swing.JLabel txtMots_clef;
    private javax.swing.JLabel txtPostures;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
